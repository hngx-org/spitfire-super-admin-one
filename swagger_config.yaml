swagger: "2.0"
info:
  title: Spitfire Superadmin API
  version: "1.0"

securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    in: header
    description: Enter Bearer token in the format 'Bearer <token>'

security:
  - BearerAuth: [] # Apply BearerAuth security to all endpoints

basePath: "/api/admin"

schemes:
  - http
  - https

paths:
  /shop/endpoint:
    get:
      tags:
        - Shop
      summary: Get information from the shop endpoint
      description: |
        This endpoint retrieves information from the shop endpoint. The user ID is automatically
        provided by the authorization logic.
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              message:
                type: string
                example: "This is the shop endpoint under /api/shop/endpoint {user_id}"
        401:
          description: Unauthorized - Invalid or missing authentication token
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Unauthorized"
              message:
                type: string
                example: "You are not logged in"
        403:
          description: Forbidden - User does not have permission to access the resource
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Forbidden"
              message:
                type: string

  /shop/all:
    get:
      tags:
        - Shop
      summary: Get information related to all shops
      description: |
        This endpoint retrieves information related to all shops in the system.
        Requires admin authentication.
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              message:
                type: string
                example: "all shops information"
              data:
                type: array
                items:
                  type: object
                  properties:
                    admin_status:
                      type: string
                    createdAt:
                      type: string
                    is_deleted:
                      type: string
                    joined_date:
                      type: string
                    merchant_country:
                      type: string
                    merchant_email:
                      type: string
                    merchant_id:
                      type: string
                    merchant_location:
                      type: string
                    merchant_name:
                      type: string
                    policy_confirmation:
                      type: boolean
                    rating:
                      type: integer
                    restricted:
                      type: string
                    reviewed:
                      type: boolean
                    total_products:
                      type: integer
                    updatedAt:
                      type: string
                    vendor_id:
                      type: string
                    vendor_name:
                      type: string
                    vendor_profile_pic:
                      type: array
                      items:
                        type: string
                    vendor_status:
                      type: string
              total_shops:
                type: integer
                example: 1
              total_banned_shops:
                type: integer
              total_deleted_shops:
                type: integer
              total_pages:
                type: integer
                example: 1
      401:
        description: Unauthorized - Invalid or missing authentication token
        schema:
          type: object
          properties:
            error:
              type: string
              example: "Unauthorized"
            message:
              type: string
              example: "You are not logged in"
      403:
        description: Forbidden - User does not have permission to access the resource
        schema:
          type: object
          properties:
            error:
              type: string
              example: "Forbidden"
            message:
              type: string
              example: "No Permissions to access the requested resource"
      500:
        description: Internal Server Error
        schema:
          type: object
          properties:
            error:
              type: string
              example: "Internal Server Error"
            message:
              type: string
              example: "An error occurred while processing the request"

  # Unable to test this endpoint
  /shop/all/total_sales:
    post:
      tags:
        - Shop
      summary: Get information related to all shops total sales
      description: |
        This endpoint retrieves information related to all shops total sales in the system.
        Requires admin authentication.
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              message:
                type: string
                example: "total Sales and Order Retrieved"
              data:
                type: array
                items:
                  type: integer

        400:
          description: Invalid format
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Invalid payload format."
              message:
                type: string
                example: Bad input format

        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal Server Error"
              message:
                type: string
                example: something went wrong

  /shop/{shop_id}:
    get:
      tags:
        - Shop
      summary: Get information related to a specific shop
      description: |
        This endpoint retrieves information related to a specific shop identified by the provided shop ID.
        Requires admin authentication.
      parameters:
        - in: path
          name: shop_id
          required: true
          schema:
            type: string
          description: Unique identifier for the shop
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              message:
                type: string
                example: "the shop information"
              data:
                type: object
                properties:
                  admin_status:
                    type: string
                  createdAt:
                    type: string
                  is_deleted:
                    type: string
                  joined_date:
                    type: string
                  merchant_country:
                    type: string
                  merchant_email:
                    type: string
                  merchant_id:
                    type: string
                  merchant_location:
                    type: string
                  merchant_name:
                    type: string
                  policy_confirmation:
                    type: boolean
                  rating:
                    type: integer
                  restricted:
                    type: string
                  reviewed:
                    type: boolean
                  updatedAt:
                    type: string
                  vendor_id:
                    type: string
                  vendor_name:
                    type: string
                  vendor_profile_pic:
                    type: array
                    items:
                      type: string
                  vendor_status:
                    type: string
                  vendor_total_orders:
                    type: integer
                  vendor_total_sales:
                    type: integer
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        category_id:
                          type: integer
                        category_name:
                          type: string
                        createdAt:
                          type: string
                        currency:
                          type: string
                        description:
                          type: string
                        discount_price:
                          type: number
                        price:
                          type: number
                        product_admin_status:
                          type: string
                        product_date_added:
                          type: string
                        product_id:
                          type: string
                        product_image:
                          type: array
                          items:
                            type: string
                        product_is_deleted:
                          type: string
                        product_is_published:
                          type: boolean
                        product_name:
                          type: string
                        product_rating_id:
                          type: integer
                        product_status:
                          type: string
                        quantity:
                          type: integer
                        sub_category_name:
                          type: string
                        tax:
                          type: number
                        updatedAt:
                          type: string
              total_pages:
                type: integer
                example: 1
              total_products:
                type: integer
                example: 1
      401:
        description: Unauthorized - Invalid or missing authentication token
        schema:
          type: object
          properties:
            error:
              type: string
              example: "Unauthorized"
            message:
              type: string
              example: "You are not logged in"
      403:
        description: Forbidden - User does not have permission to access the resource
        schema:
          type: object
          properties:
            error:
              type: string
              example: "Forbidden"
            message:
              type: string
              example: "No Permissions to access the requested resource"
      404:
        description: Not Found - Shop with the given ID not found
        schema:
          type: object
          properties:
            error:
              type: string
              example: "not found"
            message:
              type: string
              example: "invalid shop id"
      500:
        description: Internal Server Error
        schema:
          type: object
          properties:
            error:
              type: string
              example: "Internal Server Error"
            message:
              type: string
              example: "An error occurred while processing the request"

  /shop/ban_vendor/{vendor_id}:
    put:
      tags:
        - Shop
      summary: Ban a vendor/shop by ID
      parameters:
        - name: vendor_id
          in: path
          required: true
          type: string
        - name: reason
          in: body
          required: true
          schema:
            type: object
            properties:
              reason:
                type: string
      responses:
        201:
          description: Vendor banned successfully
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Vendor"
              message:
                type: string
                example: "Vendor account banned temporarily."
              reason:
                type: string
        404:
          description: Vendor not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "Vendor not found."
        409:
          description: Conflict - Vendor is already banned
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Conflict"
              message:
                type: string
                example: "Action already carried out on this Shop"
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal Server Error"
              message:
                type: string
                example: something went wrong

  /shop/banned_vendors:
    get:
      tags:
        - Shop
      summary: Get a list of all banned vendors
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Banned vendors retrieved successfully."
              data:
                type: array
                items:
                  $ref: "#/definitions/Vendor"

  /api/shop/unban_vendor/{vendor_id}:
    put:
      tags:
        - Shop
      summary: Unban a vendor by ID
      parameters:
        - name: vendor_id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Vendor unbanned successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Vendor unbanned successfully."
              vendor_details:
                $ref: "#/definitions/Vendor"
        404:
          description: Vendor not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "Vendor not found."
        409:
          description: Conflict - Vendor is not banned
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Conflict"
              message:
                type: string
                example: "This Vendor is Not Banned"
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Error."
              message:
                type: string

  /shop/restore_shop/{shop_id}:
    patch:
      tags:
        - Shop
      summary: Restore a temporarily deleted shop by ID
      parameters:
        - name: shop_id
          in: path
          required: true
          type: string
      responses:
        201:
          description: Shop restored successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Shop restored successfully"
              data:
                $ref: "#/definitions/Vendor"
        404:
          description: Invalid Shop
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "Shop Not Found"
        409:
          description: Conflict - Vendor is active
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Conflict"
              message:
                type: string
                example: "Action already carried out on this Shop"
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal Server Error"
              message:
                type: string

  /shop/delete_shop/{shop_id}:
    patch:
      tags:
        - Shop
      summary: Temporarily delete a shop and its associated products
      parameters:
        - name: shop_id
          in: path
          required: true
          type: string
        - name: reason
          in: body
          required: true
          schema:
            type: object
            properties:
              reason:
                type: string
      responses:
        204:
          description: Shop and associated products temporarily deleted successfully
        404:
          description: Shop not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "Shop Not Found"
        409:
          description: Conflict - Shop is already temporarily deleted
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Conflict"
              message:
                type: string
                example: "Action already carried out on this Shop"
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal Server Error"
              message:
                type: string

    delete:
      tags:
        - Shop
      summary: Permanently delete a shop and its associated products
      parameters:
        - name: shop_id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Shop and associated products deleted permanently
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Bad Request - Shop not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "Shop Not Found"
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal Server Error"
              message:
                type: string

  /shop/temporarily_deleted_vendors:
    get:
      tags:
        - Shop
      summary: Retrieve temporarily deleted vendors
      responses:
        200:
          description: Temporarily deleted vendors retrieved successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: "All temporarily deleted vendors retrieved successfully"
              temporarily_deleted_vendors:
                type: array
                items:
                  $ref: "#/definitions/Vendor"
              count:
                type: integer
                example: 1
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal Server Error"
              message:
                type: string

  /shop/temporarily_deleted_vendor/{vendor_id}:
    get:
      tags:
        - Shop
      summary: Retrieve details of a temporarily deleted vendor
      parameters:
        - name: vendor_id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Temporarily deleted vendor details retrieved successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Temporarily deleted vendor details retrieved successfully"
              data:
                $ref: "#/definitions/Vendor"
        404:
          description: Temporarily deleted vendor not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "Vendor Not Found"
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal Server Error"
              message:
                type: string

  /shop/sanctioned:
    get:
      tags:
        - Shop
      summary: Get all sanctioned shops
      responses:
        200:
          description: Sanctioned shops retrieved successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: "All sanctioned shops"
              object:
                type: array
                items:
                  $ref: "#/definitions/Vendor"
        404:
          description: sanctioned vendor not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "No shops found"

        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal Server Error"
              message:
                type: string

  /product/all:
    get:
      tags:
        - Product
      summary: "Get information related to all products."
      description: "Returns all products with their details."
      responses:
        200:
          description: "List of products with their details."
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/Product"
              message:
                type: string
                example: all products information
              total_deleted_products:
                type: integer
              total_pages:
                type: integer
                example: 1
              total_products:
                type: integer
                example: 1
              total_sanctioned_products:
                type: integer

        500:
          description: "Internal Server Error"
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal Server Error"
              message:
                type: string

  /product/pending:
    get:
      tags:
        - Product
      summary: Get information related to all pending products.
      description: Retrieves information about pending products from the database and applies pagination.
      responses:
        200:
          description: Pending products
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    admin_status:
                      type: string
                    category_id:
                      type: integer
                    category_name:
                      type: string
                    createdAt:
                      type: string
                    currency:
                      type: string
                    description:
                      type: string
                    discount_price:
                      type: number
                    is_deleted:
                      type: string
                    is_published:
                      type: string
                    price:
                      type: number
                    product_id:
                      type: string
                    product_image:
                      type: array
                      items:
                        type: string
                    product_name:
                      type: string
                    quantity:
                      type: integer
                    rating_id:
                      type: integer
                    shop_id:
                      type: string
                    shop_name:
                      type: string
                    sub_category_name:
                      type: string
                    tax:
                      type: number
                    updatedAt:
                      type: string
                    user_id:
                      type: string
                    vendor_name:
                      type: string
              message:
                type: string
                example: All Pending products information
              total_pages:
                type: integer
                example: 1
              total_pending_products:
                type: integer
                example: 1

        500:
          description: "Internal Server Error"
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal Server Error"
              message:
                type: string

  /product/{product_id}:
    get:
      tags:
        - Product
      summary: Get information related to a product.
      description: Returns details of a specific product.
      parameters:
        - name: product_id
          in: path
          description: "The unique identifier of the product."
          required: true
          type: string
      responses:
        200:
          description: "Details of the requested product."
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Product"
              message:
                type: string
                example: product successfully retrieved
        404:
          description: "Product not found."
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "Product Not Found"
        500:
          description: "Internal Server Error"
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal Server Error"
              message:
                type: string

  /product/sanction/{product_id}:
    patch:
      tags:
        - Product
      summary: "Sanction a product."
      description: "Sanctions a product by setting their is_deleted attribute to 'temporary' and admin_status attribute to 'suspended'."
      parameters:
        - name: product_id
          in: path
          description: "The unique identifier of the product."
          required: true
          type: string
      responses:
        200:
          description: "Product sanctioned successfully."
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/ProductFormat"
              message:
                type: string
                example: "Product sanctioned successfully."
        404:
          description: "Product not found."
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Product Not Found"
              message:
                type: string
                example: "Product does not exist."
        409:
          description: "Conflict. Product has already been sanctioned."
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Conflict"
              message:
                type: string
                example: "Product has already been sanctioned."

  /product/product_statistics:
    get:
      tags:
        - Product
      summary: "Get product statistics."
      description: "Returns statistics about the products, including the total number of all products, the total number of sanctioned products, and the total number of deleted products."
      responses:
        200:
          description: "Product statistics retrieved successfully."
          schema:
            type: object
            properties:
              status:
                type: string
                example: "Success"
              product_statistics:
                type: object
                properties:
                  total_products:
                    type: integer
                    example: 1
                  total_sanctioned_products:
                    type: integer
                    example: 1
                  total_deleted_products:
                    type: integer
                    example: 1
        400:
          description: "Bad request. Something went wrong while retrieving product statistics."
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Bad request"
              message:
                type: string
                example: "Something went wrong while retrieving product statistics: {error}"

  /product/restore_product/{product_id}:
    patch:
      tags:
        - Product
      summary: Restore a temporarily deleted product by ID
      parameters:
        - name: product_id
          in: path
          required: true
          type: string
      responses:
        201:
          description: Product restored successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Product restored successfully"
              data:
                $ref: "#/definitions/ProductFormat"
        404:
          description: Invalid Product
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Product Not Found"
              message:
                type: string
                example: "Product Already deleted"
        409:
          description: "Conflict. Product not deleted"
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Conflict"
              message:
                type: string
                example: "product is not marked as deleted"
        400:
          description: "Bad request. Something went wrong while performing this Action"
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Bad request"
              message:
                type: string
                example: Something went wrong while performing this Action

  /product/delete_product/{id}:
    patch:
      tags:
        - Product
      summary: Temporarily delete a product by ID
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: product
          in: body
          required: true
          schema:
            type: object
            properties:
              status:
                type: string
                example: "temporary"
      responses:
        204:
          description: Product temporarily deleted

        404:
          description: Product not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "Product not found"
        409:
          description: Conflict.
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Conflict"
              message:
                type: string
                example: Action already carried out on this Product

    delete:
      tags:
        - Product
      summary: Permanently delete a product by ID
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        204:
          description: Product Permanently Deleted from the Database"
        404:
          description: Product not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "Product not found"
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              error:
                type: string
                example: Internal Server Error
              message:
                type: string
                example: we are currently experiencing a downtime with this feature

  /product/approve_product/{product_id}:
    patch:
      tags:
        - Product
      summary: "Approve a product."
      description: "Approves a product by updating the 'admin_status' field of the product in the database to 'approved'."
      parameters:
        - name: product_id
          in: path
          description: "The unique identifier of the product."
          required: true
          type: string
      responses:
        201:
          description: "Product approved successfully."
          schema:
            type: object
            properties:
              message:
                type: string
                example: Product approved successfully
              data:
                $ref: "#/definitions/ProductFormat"
        404:
          description: "Product not found."
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "Product not found"
        409:
          description: Conflict.
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Conflict"
              message:
                type: string
                example: Action already carried out on this Product
        500:
          description: "Internal Server Error"
          schema:
            type: object
            properties:
              error:
                type: string
                example: Internal Server Error
              message:
                type: string

  /product/temporarily_deleted_products:
    get:
      tags:
        - Product
      summary: "Retrieve temporarily deleted products."
      description: "Allows super admin users to retrieve a list of products that have been temporarily deleted."
      responses:
        200:
          description: "Temporarily deleted products retrieved successfully."
          schema:
            type: object
            properties:
              message:
                type: string
                example: All temporarily deleted products retrieved successfully
              data:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1
                  temporarily_deleted_products:
                    $ref: "#/definitions/ProductFormat"
        500:
          description: "Internal Server Error"
          schema:
            type: object
            properties:
              status:
                type: string
                example: Error
              message:
                type: string
                example: Unexpected error occurred while processing the request.

  /health/:
    get:
      summary: "Check the availability of specified API endpoints"
      responses:
        200:
          description: "Successful health check"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                endpoint:
                  type: "string"
                status:
                  type: "string"
                  description: "Status of the endpoint (active/inactive)"
        500:
          description: "Internal Server Error"
    parameters: []

definitions:
  Vendor:
    type: object
    properties:
      admin_status:
        type: string
      created_at:
        type: string
      id:
        type: string
      is_deleted:
        type: string
      merchant_id:
        type: string
      name:
        type: string
      policy_confirmation:
        type: boolean
      rating:
        type: integer
      restricted:
        type: string
      reviewed:
        type: boolean
      updated_at:
        type: string

  Product:
    type: object
    properties:
      admin_status:
        type: string
      category_id:
        type: integer
      category_name:
        type: string
      createdAt:
        type: string
      currency:
        type: string
      description:
        type: string
      discount_price:
        type: number
      is_deleted:
        type: string
      is_published:
        type: string
      price:
        type: number
      product_id:
        type: string
      product_image:
        type: array
        items:
          type: string
      product_name:
        type: string
      product_status:
        type: string
      quantity:
        type: integer
      rating_id:
        type: integer
      shop_id:
        type: string
      shop_name:
        type: string
      sub_category_name:
        type: string
      tax:
        type: number
      updatedAt:
        type: string
      user_id:
        type: string
      vendor_name:
        type: string

  ProductFormat:
    type: object
    properties:
      admin_status:
        type: string
      category_id:
        type: integer
      createdAt:
        type: string
      currency:
        type: string
      description:
        type: string
      discount_price:
        type: number
      id:
        type: string
      is_deleted:
        type: string
      is_published:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      rating_id:
        type: integer
      shop_id:
        type: string
      tax:
        type: number
      updatedAt:
        type: string
      user_id:
        type: string
