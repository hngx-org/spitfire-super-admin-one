swagger: "2.0"
info:
  title: Super Admin1
  version: "1.0"
schemes:
  - http
  - https
paths:
  /api/user:
    get:
      tags:
        - User
      summary: Get a list of users
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      tags:
        - User
      summary: Create a new user
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        201:
          description: User created successfully
          schema:
            $ref: '#/definitions/User'

  /users/{user_id}:
    get:
      tags:
        - User
      summary: Get a user by ID
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/User'
    put:
      tags:
        - User
      summary: Update a user by ID
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          format: int64
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: User updated successfully
          schema:
            $ref: '#/definitions/User'
    delete:
      tags:
        - User
      summary: Delete a user by ID
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: User deleted successfully

definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      username:
        type: string
        example: john_doe
      first_name:
        type: string
        example: John
      last_name:
        type: string
        example: Doe
      email:
        type: string
        example: john@example.com
      section_order:
        type: array
        items:
          type: string
        example: ['section1', 'section2']
      password:
        type: string
        example: myapp
      is_verified:
        type: boolean
        example: true
      two_factor_auth:
        type: boolean
        example: false
      provider:
        type: string
        example: local
      profile_pic:
        type: string
        example: https://example.com/profile_pic.jpg
      refresh_token:
        type: string
        example: ABCDEFG


paths:
  /api/shop:
    get:
      tags:
        - "Shops"
      summary: "Get a list of shops"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Shop"
    post:
      tags:
        - "Shops"
      summary: "Create a new shop"
      parameters:
        - name: "shop"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Shop"
      responses:
        201:
          description: "Shop created successfully"
        400:
          description: "Bad request"

  /api/shop/{id}:
    get:
      tags:
        - "Shops"
      summary: "Get details of a shop by ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/Shop"
        404:
          description: "Shop not found"

    put:
      tags:
        - "Shops"
      summary: "Update a shop by ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
        - name: "shop"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Shop"
      responses:
        200:
          description: "Shop updated successfully"
        404:
          description: "Shop not found"
        400:
          description: "Bad request"

    delete:
      tags:
        - "Shops"
      summary: "Delete a shop by ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
      responses:
        204:
          description: "Shop deleted successfully"
        404:
          description: "Shop not found"

definitions:
  Shop:
    type: "object"
    properties:
      id:
        type: "integer"
      merchant_id:
        type: "string"
      name:
        type: "string"
      policy_confimation:
        type: "boolean"
      restricted:
        type: "string"
        enum:
          - "no"
          - "temporary"
          - "permanent"
      admin_status:
        type: "string"
        enum:
          - "pending"
          - "review"
          - "approved"
          - "blacklist"
      is_deleted:
        type: "string"
        enum:
          - "active"
          - "temporary"
      reviewed:
        type: "boolean"
      rating:
        type: "number"
        format: "double"
  
    /api/shop/banned_vendors:
      get:
        summary: Get a list of banned vendors
        responses:
          '200':
            description: A list of banned vendors.
            content:
              application/json:
                example:
                  banned_vendors:
                    - admin_status: suspended
                      created_at: 2023-10-08 19:52:27.871023
                      id: de73e148-c1dc-41ab-a44a-acbd59542cf6
                      is_deleted: active
                      merchant_id: d5a5310f-295e-4742-bedc-a0b695a26956
                      name: Admin2
                      policy_confirmation: true
                      rating: 4.0
                      restricted: temporary
                      reviewed: true
                      updated_at: 2023-10-08 19:52:27.871027
                    - admin_status: suspended
                      created_at: 2023-10-08 19:50:25.742457
                      id: 08654c72-0505-4f0d-85cd-38234f8ee18f
                      is_deleted: temporary
                      merchant_id: 6d49f12f-2295-423e-9de3-f945ee82d7f0
                      name: Admin
                      policy_confirmation: true
                      rating: 4.0
                      restricted: temporary
                      reviewed: true
                      updated_at: 2023-10-08 19:53:55.154469
        tags:
          - Banned Vendors

      post:
        summary: Add a new banned vendor
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  admin_status:
                    type: string
                    enum: [suspended]
                    description: The admin status of the vendor.
                  created_at:
                    type: string
                    format: date-time
                    description: The creation date and time of the vendor.
                  id:
                    type: string
                    description: The unique ID of the vendor.
                  is_deleted:
                    type: string
                    enum: [active, temporary]
                    description: The deletion status of the vendor.
                  merchant_id:
                    type: string
                    description: The ID of the merchant associated with the vendor.
                  name:
                    type: string
                    description: The name of the vendor.
                  policy_confirmation:
                    type: boolean
                    description: Indicates if the vendor has confirmed the policy.
                  rating:
                    type: number
                    description: The rating of the vendor.
                  restricted:
                    type: string
                    enum: [temporary]
                    description: The restriction status of the vendor.
                  reviewed:
                    type: boolean
                    description: Indicates if the vendor has been reviewed.
                  updated_at:
                    type: string
                    format: date-time
                    description: The last update date and time of the vendor.
        responses:
          '201':
            description: The vendor has been successfully added.
        tags:
          - Banned Vendors

    /api/shop/banned_vendors/{vendor_id}:
      get:
        summary: Get details of a specific banned vendor
        parameters:
          - name: vendor_id
            in: path
            required: true
            schema:
              type: string
            description: The ID of the banned vendor to retrieve.
        responses:
          '200':
            description: The details of the banned vendor.
            content:
              application/json:
                example:
                  admin_status: suspended
                  created_at: 2023-10-08 19:52:27.871023
                  id: de73e148-c1dc-41ab-a44a-acbd59542cf6
                  is_deleted: active
                  merchant_id: d5a5310f-295e-4742-bedc-a0b695a26956
                  name: Admin2
                  policy_confirmation: true
                  rating: 4.0
                  restricted: temporary
                  reviewed: true
                  updated_at: 2023-10-08 19:52:27.871027
        tags:
          - Banned Vendors

      put:
        summary: Update details of a specific banned vendor
        parameters:
          - name: vendor_id
            in: path
            required: true
            schema:
              type: string
            description: The ID of the banned vendor to update.
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  admin_status:
                    type: string
                    enum: [suspended]
                    description: The admin status of the vendor.
                  created_at:
                    type: string
                    format: date-time
                    description: The creation date and time of the vendor.
                  id:
                    type: string
                    description: The unique ID of the vendor.
                  is_deleted:
                    type: string
                    enum: [active, temporary]
                    description: The deletion status of the vendor.
                  merchant_id:
                    type: string
                    description: The ID of the merchant associated with the vendor.
                  name:
                    type: string
                    description: The name of the vendor.
                  policy_confirmation:
                    type: boolean
                    description: Indicates if the vendor has confirmed the policy.
                  rating:
                    type: number
                    description: The rating of the vendor.
                  restricted:
                    type: string
                    enum: [temporary]
                    description: The restriction status of the vendor.
                  reviewed:
                    type: boolean
                    description: Indicates if the vendor has been reviewed.
                  updated_at:
                    type: string
                    format: date-time
                    description: The last update date and time of the vendor.
        responses:
          '200':
            description: The vendor has been successfully updated.
        tags:
          - Banned Vendors

      delete:
        summary: Delete a specific banned vendor
        parameters:
          - name: vendor_id
            in: path
            required: true
            schema:
              type: string
            description: The ID of the banned vendor to delete.
        responses:
          '204':
            description: The vendor has been successfully deleted.
        tags:
          - Banned Vendors

  tags:
    - name: Banned Vendors

  /api/shop/ban_vendor/{merchant_id}:
    put:
      summary: Update the ban status of a vendor
      description: Update the ban status of a specific vendor identified by their `merchant_id`.
      parameters:
        - name: merchant_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the merchant/vendor to update the ban status for.
      requestBody:
        description: The vendor ban status update details.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorBanStatus'
      responses:
        '200':
          description: The ban status of the vendor has been successfully updated.
        '404':
          description: The vendor with the specified `merchant_id` was not found.
      tags:
        - Banned Vendors

components:
  schemas:
    VendorBanStatus:
      type: object
      properties:
        admin_status:
          type: string
          enum: [suspended]
          description: The updated admin status of the vendor.
        is_deleted:
          type: string
          enum: [active, temporary]
          description: The updated deletion status of the vendor.
        restricted:
          type: string
          enum: [temporary]
          description: The updated restriction status of the vendor.
        reviewed:
          type: boolean
          description: Indicates if the vendor has been reviewed.

  tags:
    - name: Banned Vendors
  paths:
  /api/shop/unban_vendor:
    put:
      summary: Unban a vendor
      description: Unban a vendor identified by their `merchant_id`.
      requestBody:
        description: The request to unban a vendor.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorUnbanRequest'
      responses:
        '200':
          description: Vendor unbanned successfully.
          content:
            application/json:
              example:
                message: Vendor unbanned successfully.
                status: Success
                vendor_details:
                  admin_status: approved
                  created_at: "2023-10-08 19:52:27.871023"
                  id: "de73e148-c1dc-41ab-a44a-acbd59542cf6"
                  is_deleted: active
                  merchant_id: "d5a5310f-295e-4742-bedc-a0b695a26956"
                  name: Admin2
                  policy_confirmation: true
                  rating: 4.0
                  restricted: no
                  reviewed: true
                  updated_at: "2023-10-08 19:52:27.871027"
      tags:
        - Unbanned Vendors

components:
  schemas:
    VendorUnbanRequest:
      type: object
      properties:
        merchant_id:
          type: string
          description: The ID of the merchant/vendor to unban.  
    tags:
        - Unbanned Vendors
  # paths:
  #   /api/product:
  #     get:
  #       tags:
  #         - "Products"
  #       summary: "Get a list of products"
  #       responses:
  #         200:
  #           description: "Successful response"
  #           schema:
  #             type: "array"
  #             items:
  #               $ref: "#/definitions/Product"
  #     post:
  #       tags:
  #         - "Products"
  #       summary: "Create a new product"
  #       parameters:
  #         - name: "product"
  #           in: "body"
  #           required: true
  #           schema:
  #             $ref: "#/definitions/Product"
  #       responses:
  #         201:
  #           description: "Product created successfully"
  #         400:
  #           description: "Bad request"

  #   /api/product/{id}:
  #     get:
  #       tags:
  #         - "Products"
  #       summary: "Get details of a product by ID"
  #       parameters:
  #         - name: "id"
  #           in: "path"
  #           required: true
  #           type: "integer"
  #       responses:
  #         200:
  #           description: "Successful response"
  #           schema:
  #             $ref: "#/definitions/Product"
  #         404:
  #           description: "Product not found"

  #     put:
  #       tags:
  #         - "Products"
  #       summary: "Update a product by ID"
  #       parameters:
  #         - name: "id"
  #           in: "path"
  #           required: true
  #           type: "integer"
  #         - name: "product"
  #           in: "body"
  #           required: true
  #           schema:
  #             $ref: "#/definitions/Product"
  #       responses:
  #         200:
  #           description: "Product updated successfully"
  #         404:
  #           description: "Product not found"
  #         400:
  #           description: "Bad request"

  #     delete:
  #       tags:
  #         - "Products"
  #       summary: "Delete a product by ID"
  #       parameters:
  #         - name: "id"
  #           in: "path"
  #           required: true
  #           type: "integer"
  #       responses:
  #         204:
  #           description: "Product deleted successfully"
  #         404:
  #           description: "Product not found"

  # definitions:
  #   Product:
  #     type: "object"
  #     properties:
  #       id:
  #         type: "integer"
  #       shop_id:
  #         type: "string"
  #       rating_id:
  #         type: "string"
  #       image_id:
  #         type: "string"
  #       category_id:
  #         type: "string"
  #       name:
  #         type: "string"
  #       description:
  #         type: "string"
  #       quantity:
  #         type: "integer"
  #       price:
  #         type: "number"
  #         format: "double"
  #       discount_price:
  #         type: "number"
  #         format: "double"
  #       tax:
  #         type: "number"
  #         format: "double"
  #       admin_status:
  #         type: "string"
  #         enum:
  #           - "pending"
  #           - "review"
  #           - "approved"
  #           - "blacklist"
  #       is_deleted:
  #         type: "string"
  #         enum:
  #           - "active"
  #           - "temporary"
  #       is_published:
  #         type: "boolean"
  #       currency:
  #         type: "string"
  #       created_at:
  #         type: "string"
  #         format: "date-time"
  #       updated_at:
  #         type: "string"
  #         format: "date-time"

